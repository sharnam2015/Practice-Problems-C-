/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
//private:
  //  TreeNode* out;
   // TreeNode* p = out;
    
public:
    TreeNode out = TreeNode(0);
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {        
    
        if(t1==NULL && t2==NULL)
        {
            return t1;
        }
        if(t1==NULL)
        {
            //TreeNode*op = new TreeNode(0);
            //op  = &out;
            //op->val = t2->val;
            //t1 = op;
            //t1=t2;
            //t1 = op;
            //op->val = t2->val;
            //t1 = op;
            return t2;
        }
        if(t2==NULL)
        {
            return t1;
        }
     //if(t1!=NULL && t2!=NULL){   
    t1->val = t1->val+t2->val;
    // }
    
    t1->left = mergeTrees(t1->left,t2->left);
    t1->right= mergeTrees(t1->right,t2->right);
    
    return t1;    
   /*     
        if(t1==NULL)
            return t2;
        if(t2==NULL)
            return t1;
    
            t1->val = t1->val+t2->val;
            //out=out->left;
            t1->left = mergeTrees(t1->left,t2->left);
           // out = out->right
            t1->right = mergeTrees(t1->right,t2->right);
        
        return t1;
     */
     }
};
